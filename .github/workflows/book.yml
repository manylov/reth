name: book
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:

jobs:
  test:
    runs-on: ubuntu-latest
    name: test

    steps:
      - uses: actions/checkout@v3

      - name: Install mdbook
        run: |
          mkdir mdbook
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.14/mdbook-v0.4.14-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook
          echo `pwd`/mdbook >> $GITHUB_PATH

      - name: Install mdbook-template
        run: |
          mkdir mdbook-template
          curl -sSL https://github.com/sgoudham/mdbook-template/releases/latest/download/mdbook-template-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook-template
          echo `pwd`/mdbook-template >> $GITHUB_PATH

      - name: Run tests
        run: mdbook test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install mdbook
        run: |
          mkdir mdbook
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.14/mdbook-v0.4.14-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook
          echo `pwd`/mdbook >> $GITHUB_PATH

      - name: Install mdbook-template
        run: |
          mkdir mdbook-template
          curl -sSL https://github.com/sgoudham/mdbook-template/releases/latest/download/mdbook-template-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook-template
          echo `pwd`/mdbook-template >> $GITHUB_PATH

      - name: Build book
        run: mdbook build

      - name: Build docs
        run: RUSTDOCFLAGS="--enable-index-page -Zunstable-options" cargo +nightly doc --all --no-deps

      - name: Move docs to book folder
        run: |
          mv target/doc target/book/docs

      - name: Save pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: target/book

  deploy:
    # Only deploy if a push to main
    if: github.ref_name == 'main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [test, build]

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1